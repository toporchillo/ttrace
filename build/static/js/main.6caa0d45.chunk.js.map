{"version":3,"sources":["logo.svg","components/Layout.js","components/Starter.js","components/Finisher.js","components/Statusbar.js","components/Starters.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","layout","props","children","styleStarter","border","width","height","padding","display","flexDirection","float","margin","styleStarterReady","backgroundColor","cursor","styleStarterStarted","styleStarterFinished","styleStarterDnf","styleNumber","flex","color","fontSize","fontWeight","styleResult","marginTop","zIndex","Starter","state","status","dtstart","dtfinish","time","Start","bind","Finish","Continue","Dnf","ftimer","Timer","this","setState","Date","setOnRace","setInterval","clearInterval","window","confirm","number","msec_num","parseInt","sec_num","Math","floor","hours","minutes","seconds","millisec","block","style","onClick","TFormat","microtime","TmilliFormat","key","React","Component","styleFinisher","textAlign","marginLeft","Finisher","smallComment","Statusbar","onrace","finishers","finished","truefinished","SelectToFinish","TheEnd","Object","values","length","fin","ord","event","tofinish","target","value","finisher","finnumber","val","split","finishStarter","i","d","h","getHours","m","getMinutes","s","getSeconds","options","map","st","FormatTime","name","id","defaultValue","onChange","disabled","self","Selector","FinisherSelector","Finishers","className","Starters","starters","current","FinishExt","num","push","statusbar","sprt","starterState","sort","a","b","protocol","createRef","Numchange","Init","starter","ref","Items","htmlFor","type","size","src","logo","alt","App","Layout","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6caa0d45.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.78e57cd0.svg\";","import React from 'react';\n\nconst layout = (props) => (\n  <div>\n    <main>\n    {props.children}\n    </main>\n  </div>\n);\n\nexport default layout;\n","import React from 'react';\n\nconst styleStarter = {\n  border: \"solid 0.2em gray\",\n  width: \"5em\",\n  height: \"4.8em\",\n  padding: \"0.4em\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  float: \"left\",\n  margin: \"0.4em 0 0 0.4em\"\n}\n\nconst styleStarterReady = {\n\tbackgroundColor: \"yellow\",\n\tcursor: \"pointer\",\n\tpadding: \"0.1em\"\n}\n\nconst styleStarterStarted = {\n\tbackgroundColor: \"#70ff70\",\n\tcursor: \"pointer\",\n\tpadding: \"0.1em\"\n}\n\nconst styleStarterFinished = {\n\tbackgroundColor: \"#ff7070\",\n\tpadding: \"0.1em\"\n}\n\nconst styleStarterDnf = {\n\tbackgroundColor: \"#a0a0a0\",\n\tpadding: \"0.1em\"\n}\n\nconst styleNumber = {\n  padding: \"0.2em auto 0.4em auto\",\n  flex: \"1\",\n  color: \"#002e82\",\n  fontSize: \"4em\",\n  fontWeight: \"bold\",\n}\n\nconst styleResult = {\n  fontSize: \"1.4em\",\n  marginTop: \"-2em\",\n  color: \"white\",\n  height: \"2em\",\n  zIndex: \"10\"\n}\n\nclass Starter extends React.Component{\n\tconstructor(props) {\n\t  super(props);\n\t  this.state = {\n\t\tstatus:'ready',\n\t\tdtstart: null,\n\t\tdtfinish: null,\n\t\ttime: 0\n\t  }\n\t  this.Start = this.Start.bind(this)\n\t  this.Finish = this.Finish.bind(this)\n\t  this.Continue = this.Continue.bind(this)\n\t  this.Dnf = this.Dnf.bind(this)\n\t  this.ftimer = null;\n\t  this.Timer = this.Timer.bind(this)\n\t}\n\n\tStart() {\n\t  this.setState({\n\t\tstatus:'started',\n\t\tdtstart: new Date()\n\t  }, () => { this.props.setOnRace(); });\n\t  this.ftimer = setInterval(this.Timer, 1000);\n\t  \n\t}\n\t\n\tFinish() {\n\t  var dtfinish = new Date();\n\t  clearInterval(this.ftimer);\n\t  this.setState({\n\t\tstatus:'finished',\n\t\tdtfinish: dtfinish,\n\t\ttime: dtfinish - this.state.dtstart\n\t  }, () => { this.props.setOnRace(); });\n\t  const conf = window.confirm(`Финиш #`+this.props.number+'?');\n\t  if (!conf) {\n\t\t  this.Continue();\n\t  }\n\t}\n\t\n\tFinishExt(dtfinish) {\n\t  clearInterval(this.ftimer);\n\t  this.setState({\n\t\tstatus:'finished',\n\t\tdtfinish: dtfinish,\n\t\ttime: dtfinish - this.state.dtstart\n\t  }, () => { this.props.setOnRace(); });\n\t}\t\n\n\tContinue() {\n\t  this.setState({\n\t\tstatus:'started',\n\t\tdtfinish: null,\n\t\ttime: 0\n\t  }, () => { this.props.setOnRace(); });\n\t  this.ftimer = setInterval(this.Timer, 1000);\n\t}\n\t\n\tDnf() {\n\t  const conf = window.confirm(`DNF?`);\n\t  if (conf) {\n\t\t  this.setState({\n\t\t\tstatus:'dnf',\n\t\t\ttime: 999999,\n\t\t\tdtfinish: null\n\t\t  });\n\t  }\n\t}\t\n\n\tTimer() {\n\t  let dtstart = this.state.dtstart;\n\t  this.setState({\n\t\ttime: new Date() - dtstart\n\t  });\n\t}\n\n\tTFormat(time) {\n\t\tvar msec_num = parseInt(time, 10); // don't forget the second param\n\t\tvar sec_num = Math.floor(msec_num / 1000);\n\t\tvar hours   = Math.floor(sec_num / 3600);\n\t\tvar minutes = Math.floor((sec_num - (hours * 3600)) / 60);\n\t\tvar seconds = sec_num - (hours * 3600) - (minutes * 60);\n\n\t\t//if (hours   < 10) {hours   = \"0\"+hours;}\n\t\tif (minutes < 10) {minutes = \"0\"+minutes;}\n\t\tif (seconds < 10) {seconds = \"0\"+seconds;}\n\t\treturn hours+':'+minutes+':'+seconds;\n\t}\n\t\n\tTmilliFormat(time) {\n\t\tvar millisec = parseInt(time, 10)%1000;\n\t\tif (millisec < 10) {millisec = \"00\"+millisec;}\n\t\telse if (millisec < 100) {millisec = \"0\"+millisec;}\n\t\treturn millisec;\n\t}\n\t\n\trender() {\n\t  let block;\n\t  var time;\n\t  if (this.state.status === 'ready') {\n\t\t  block = <div style={styleStarterReady} onClick={this.Start}>\n\t\t\t\t<div style={styleNumber}>{this.props.number}</div>\n\t\t\t  </div>\n\t  }\n\t  else if (this.state.status === 'started') {\n\t\t  time = this.TFormat(this.state.time);\n\t\t  block = <div style={styleStarterStarted} onClick={this.Finish}>\n\t\t\t\t<div style={styleNumber}>{this.props.number}</div>\n\t\t\t\t<div style={styleResult}>{time}</div>\n\t\t\t  </div>\n\t  }\n\t  else if (this.state.status === 'finished') {\n\t\t  time = this.TFormat(this.state.time);\n\t\t  var microtime = this.TmilliFormat(this.state.time);\n\t\t  block = <div style={styleStarterFinished} onClick={this.Dnf}>\n\t\t\t\t<div style={styleNumber}>{this.props.number}</div>\n\t\t\t\t<div style={styleResult}>\n\t\t\t\t\t{time}\n\t\t\t\t\t<br /><sup>,{microtime}</sup>\n\t\t\t\t</div>\n\t\t\t  </div>\n\t  }\n\t  else if (this.state.status === 'dnf') {\n\t\t  block = <div style={styleStarterDnf}>\n\t\t\t\t<div style={styleNumber}>{this.props.number}</div>\n\t\t\t\t<div style={styleResult}>DNF</div>\n\t\t\t  </div>\n\t  }\n\t  return ( <div key={this.props.number} style={styleStarter}>{block}</div> );\n\t}\n}\n\nexport default Starter;\n","import React from 'react';\n\nconst styleFinisher = {\n  height: \"2em\",\n  display: \"flex\",\n  flexDirection: \"row\",\n  margin: \"0.2em\",\n  textAlign: \"left\"\n}\n\nconst styleStarterFinished = {\n\tbackgroundColor: \"#ff7070\",\n    width: \"100%\",\n\tpadding: \"0.1em\"\n}\n\nconst styleStarterDnf = {\n\tbackgroundColor: \"#a0a0a0\",\n    width: \"100%\",\n\tpadding: \"0.1em\"\n}\n\nconst styleNumber = {\n  padding: \"0.2em auto 0.4em auto\",\n  flex: \"1\",\n  color: \"#002e82\",\n  fontSize: \"1.6em\",\n  width: \"1.4em\",\n  fontWeight: \"bold\",\n  float: \"left\",\n  textAlign: \"right\"\n}\n\nconst styleResult = {\n  fontSize: \"1.4em\",\n  color: \"white\",\n  height: \"2em\",\n  marginLeft: \"1em\"\n}\n\nclass Finisher extends React.Component{\n\n\tTFormat(time) {\n\t\tvar msec_num = parseInt(time, 10); // don't forget the second param\n\t\tvar sec_num = Math.floor(msec_num / 1000);\n\t\tvar hours   = Math.floor(sec_num / 3600);\n\t\tvar minutes = Math.floor((sec_num - (hours * 3600)) / 60);\n\t\tvar seconds = sec_num - (hours * 3600) - (minutes * 60);\n\n\t\t//if (hours   < 10) {hours   = \"0\"+hours;}\n\t\tif (minutes < 10) {minutes = \"0\"+minutes;}\n\t\tif (seconds < 10) {seconds = \"0\"+seconds;}\n\t\treturn hours+':'+minutes+':'+seconds;\n\t}\n\t\n\tTmilliFormat(time) {\n\t\tvar millisec = parseInt(time, 10)%1000;\n\t\tif (millisec < 10) {millisec = \"00\"+millisec;}\n\t\telse if (millisec < 100) {millisec = \"0\"+millisec;}\n\t\treturn millisec;\n\t}\n\t\n\trender() {\n\t  let block;\n\t  if (this.props.status === 'finished') {\n\t\t  var time = this.TFormat(this.props.time);\n\t\t  var microtime = this.TmilliFormat(this.props.time);\n\t\t  block = <div style={styleStarterFinished}>\n\t\t\t\t<div style={styleNumber}>{this.props.number}</div>\n\t\t\t\t<span style={styleResult}>\n\t\t\t\t\t{time}<small>,{microtime}</small>\n\t\t\t\t</span>\n\t\t\t  </div>\n\t  }\n\t  else if (this.props.status === 'dnf') {\n\t\t  block = <div style={styleStarterDnf}>\n\t\t\t\t<div style={styleNumber}>{this.props.number}</div>\n\t\t\t\t<span style={styleResult}>DNF</span>\n\t\t\t  </div>\n\t  }\n\t  return ( <div key={this.props.number} style={styleFinisher}>{block}</div> );\n\t}\n}\n\nexport default Finisher;\n","import React from 'react';\n\nconst smallComment = {\n\tfontSize: \"0.6em\"\n}\n\nclass Statusbar extends React.Component{\n\tconstructor(props) {\n\t  super(props);\n\t  this.state = {\n\t\tonrace: [],\n\t\tfinishers: {},\n\t\tfinished: 0,\n\t\ttruefinished: 0\n\t  }\n\t  this.Finish = this.Finish.bind(this)\n\t  this.SelectToFinish = this.SelectToFinish.bind(this)\n\t  //this.Finishers = this.Finishers.bind(this)\n\t  this.TheEnd = this.TheEnd.bind(this)\n\t}\n\n\tsetOnRace(onrace) {\n\t  this.setState({\n\t\tonrace: onrace\n\t  });\n\t}\n\t\n\tFinish() {\n\t  let finishers = this.state.finishers;\n\t  if (Object.values(finishers).length >= this.state.onrace.length) {\n\t\t  return;\n\t  }\n\t  let finished = this.state.finished+1;\n\t  let truefinished = this.state.truefinished+1;\n\t  finishers[finished] = {fin: finished, dtfinish: new Date(), ord: truefinished};\n\t  this.setState({\n\t\tfinishers: finishers,\n\t\tfinished: finished,\n\t\ttruefinished: truefinished\n\t  });\n\t}\n\t\n\tSelectToFinish(event) {\n\t\tlet tofinish = event.target.value;\n\t\tif (tofinish === \"-1\") {\n\t\t\treturn;\n\t\t}\n\t\tlet finnumber = tofinish;\n\t\tlet finisher;\n\t\tlet val = tofinish.split(':');\n\n\t\tlet finishers = this.state.finishers;\n\t\tlet truefinished = this.state.truefinished;\n\t\tif (val[1]) {\n\t\t  finnumber = val[0];\n\t\t  finisher = val[1];\n\t\t  this.props.finishStarter(finisher, this.state.finishers[finnumber].dtfinish);\n\t\t}\n\t\telse {\n\t\t\ttruefinished--;\n\t\t\tfor (let i in finishers) {\n\t\t\t\tif (i>finnumber) {\n\t\t\t\t\tfinishers[i].ord--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdelete finishers[finnumber];\n\t\tthis.setState({\n\t\t\tfinishers: finishers,\n\t\t\ttruefinished: truefinished\n\t\t})\n\t}\n\t\n\tTheEnd() {\n\t\tconst conf = window.confirm('Завершить гонку?');\n\t\tif (conf) {\n\t\t\tthis.props.TheEnd();\n\t\t}\n\t}\n\t\n\tFormatTime(d) {\n\t\tlet h = d.getHours();\n\t\tlet m = d.getMinutes();\n\t\tlet s = d.getSeconds();\n\t\tif (h<10) { h = \"0\"+h; }\n\t\tif (m<10) { m = \"0\"+m; }\n\t\tif (s<10) { s = \"0\"+s; }\n\t\treturn h+\":\"+m+\":\"+s;\n\t}\n\t\n\tFinisherSelector(fin) {\n\t  let options = this.state.onrace.map(function(st) {\n\t\t  let val = fin.fin+':'+st\n\t\t  return <option key={st} value={val}>{st}</option>\n\t  });\n\t  let time = this.FormatTime(fin.dtfinish);\n\t  \n\t  return ( <select key={fin.fin} name=\"onRace\" id=\"on-race-num\" defaultValue=\"-1\" onChange={this.SelectToFinish}>\n\t\t\t\t<option value=\"-1\" disabled>Финиш в {time}?</option>\n\t\t\t\t<option value={fin.fin}>Отмена</option>\n\t\t\t\t{options}\n\t\t\t</select> );\n\t}\n\t\n\tFinishers() {\n\t\tvar self = this;\n\t\treturn Object.values(this.state.finishers).map(function(fin, i) {\n\t\t\tlet Selector = self.FinisherSelector(fin);\n\t\t\treturn <div key={fin.fin}>{Selector}</div>\n\t\t});\n\t}\n\n\trender() {\n\t  let block;\n\t  let finishers = '';\n\t  if (this.state.onrace.length > 0) {\n\t\tfinishers = this.Finishers();\n\t\tblock = <button onClick={this.Finish} className=\"finishbtn\">Финиш!<div style={smallComment}>не видно номер</div></button>\n\t  }\n\t  else {\n\t\t  block = <button onClick={this.TheEnd} className=\"finishbtn\">Конец<div style={smallComment}>закончить гонку</div></button>\n\t  }\n\n\t  return ( <div className=\"statusbar\">{finishers}{block}</div> );\n\t}\n}\n\nexport default Statusbar;\n","import React from 'react';\nimport Starter from '../components/Starter'\nimport Finisher from '../components/Finisher'\nimport Statusbar from '../components/Statusbar'\nimport logo from '../logo.svg';\n\n\nclass Starters extends React.Component{\n\tconstructor(props) {\n\t  super(props);\n\t  this.state = {\n\t\tnum:10,\n\t\tstarters:[],\n\t\tprotocol: []\n\t  }\n\t  this.statusbar = React.createRef()\n\t  this.Numchange = this.Numchange.bind(this)\n\t  this.Init = this.Init.bind(this)\n\t}\n\n\tNumchange(event) {\n\t\tthis.setState({\n\t\t\tnum: event.target.value\n\t\t});\n\t}\n\t\n\tInit() {\n\t  var starters = [];\n\t  for (var i=1; i<=this.state.num; i++) {\n\t\t  starters.push(React.createRef());\n\t  }\n\t  this.setState({\n\t\tstarters: starters\n\t  });\n\t}\n\t\n\tStarters() {\n\t\treturn this.state.starters.map((starter, i) =>  <Starter key={i+1} number={i+1} ref={starter} setOnRace={this.setOnRace} />);\n\t}\n\t\n\tfinishStarter = (number, dtfinish) => {\n\t\tthis.state.starters[number-1].current.FinishExt(dtfinish);\n\t}\n\t\n\tsetOnRace = () => {\n\t\tvar onrace = [];\n\t\tfor (var i=1; i<=this.state.num; i++) {\n\t\t\tvar starterState = this.state.starters[i-1].current.state;\n\t\t\tif (starterState.status === 'started') {\n\t\t\t\tonrace.push(i);\n\t\t\t}\n\t\t}\n\t\tthis.statusbar.current.setOnRace(onrace);\n\t}\n\t\n\tTheEnd = () => {\n\t\tvar sprt = [];\n\t\tfor (var i=1; i<=this.state.num; i++) {\n\t\t\tvar starterState = this.state.starters[i-1].current.state;\n\t\t\tstarterState.number = this.state.starters[i-1].current.props.number;\n\t\t\tif (starterState.time > 0) {\n\t\t\t\tsprt.push(starterState);\n\t\t\t}\n\t\t}\n\t\tsprt.sort(function (a, b) {\n\t\t  if (a.time > b.time) {\n\t\t\treturn 1;\n\t\t  }\n\t\t  if (a.time < b.time) {\n\t\t\treturn -1;\n\t\t  }\n\t\t  // a должно быть равным b\n\t\t  return 0;\n\t\t});\n\t\tthis.setState({protocol:sprt});\n\t}\n\n\tFinishers() {\n\t\treturn this.state.protocol.map((starter, i) =>  <Finisher key={i+1} number={starter.number} status={starter.status} time={starter.time} />);\n\t}\t\n\t\n\trender() {\n\t\tlet Items;\n\t\tif (this.state.protocol.length > 0) {\n\t\t\tlet Finishers = this.Finishers();\n\t\t\tItems = <div className=\"race-screen\">\n\t\t\t\t\t\t<h2>Результаты</h2>\n\t\t\t\t\t\t{Finishers}\n\t\t\t\t\t</div>\n\t\t}\n\t\telse if (this.state.starters.length > 0) {\n\t\t\tlet Starters = this.Starters();\n\t\t\tItems = <div className=\"race-screen\">\n\t\t\t\t\t\t{Starters}\n\t\t\t\t\t\t<div className=\"lastblock\"></div>\n\t\t\t\t\t\t<Statusbar finishStarter={this.finishStarter} TheEnd={this.TheEnd} ref={this.statusbar} />\n\t\t\t\t\t</div>\n\t\t}\n\t\telse {\n\t\t\tItems = <div className=\"start-screen\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label htmlFor=\"num_starters\">Участников:</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<input type=\"number\" id=\"num_starters\" value={this.state.num} onChange={this.Numchange} size=\"3\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<button onClick={this.Init}>На старт!</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<img src={logo} className=\"App-logo\" alt=\"logo\" />\n\t\t\t\t\t</div>\n\t\t}\n\t\t\n\t\treturn (\n\t\t\t  <div className=\"mainblock\">\n\t\t\t\t{Items}\n\t\t\t  </div>\n\t\t);\n\t}\n}\n\nexport default Starters;\n","import React from 'react';\nimport './App.css';\nimport Layout from './components/Layout'\nimport Starters from './components/Starters'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout>\n        <Starters />\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}